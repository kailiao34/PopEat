FoodLis : 取得附近餐廳並排出餐廳 UI 按鈕
FoodListButton: 按下餐廳按鈕事件呼叫此腳本的 select 函數，按下資訊按鈕呼叫 OpenStoreInformation 函數


UI Buttons:
	暱稱: btnNickOkay
	選餐: btnFindEat

客戶端與伺服端互動說明:
	1. 顏色列表的傳遞:
		伺服器:
		1. 房內有一餐廳名和[編號,人數\的字典[string,ColorNum)，(編號用字串表示這樣就收到時就不用再轉換)
			有一個編號回收機制，有玩家離房時用
		(若用List，則每次加餐廳都要搜尋是否有重複)
		2. 每一次收到 GO 請求(加入等待室)，ID 和 餐廳編號一起回傳，將這人的餐廳編號記錄在各人的資訊裡，一起傳給大家 → →
		3. X秒內，統計遊戲結果並回傳勝利餐廳的編號 →

		客戶端:
		1. 每一次收到新人加入就收到這個餐廳的編號，儲存在各人的資訊裡
		2. 進等待室時，用編號作為 colorList 的 index，取得代表顏色
		3. 遊戲開始時，統計每個顏色被選到的次數，算出機率
		4. 編號記錄在每個六角裡，這個六角也用這個編號來取得顏色
		5. 遊戲結果回傳 編號 數量 →
		6. 收到勝利餐廳的編號，搜尋每個人，找到一樣的餐廳編號，用那個餐廳名顯示勝利的餐廳